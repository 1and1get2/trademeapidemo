apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.derek.trademeapi"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "CONSUMER_KEY", "\"A1AC63F0332A131A78FAC304D007E7D1\""
        buildConfigField "String", "CONSUMER_SECRET", "\"EC7F18B17A062962C6930A8AE88B16C7&\""
        buildConfigField "String", "BASE_URI", "\"https://api.tmsandbox.co.nz/v1/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    def googleSupportLibraryVersion = "27.1.1"
    def daggerVersion = "2.15"
    def butterKnifeVersion = '8.8.1'


    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /** kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:0.3'

    /** google support lib */
    implementation "com.android.support.constraint:constraint-layout:1.1.0"
    implementation "com.android.support:cardview-v7:${googleSupportLibraryVersion}"
    implementation "com.android.support:appcompat-v7:${googleSupportLibraryVersion}"
    implementation "com.android.support:gridlayout-v7:${googleSupportLibraryVersion}"
    implementation "com.android.support:support-v13:${googleSupportLibraryVersion}"
    implementation "com.android.support:support-core-utils:${googleSupportLibraryVersion}"
    implementation "com.android.support:design:${googleSupportLibraryVersion}"

    /** tools */
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    /** RxJava */
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.13'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:2.1.1'

    /** Dagger 2 */
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    /** network */
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    /** debug */
    testImplementation 'junit:junit:4.12'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
